<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="4" total="9" passed="5">
  <reporter-output>
    <line>
      <![CDATA[simply logginf report in A3]]>
    </line>
  </reporter-output>
  <suite name="Testing" duration-ms="3563" started-at="2023-12-19T12:31:48Z" finished-at="2023-12-19T12:31:51Z">
    <groups>
      <group name="sanity">
        <method signature="SampleTest.runLoginAndLogout1(java.lang.reflect.Method)[pri:0, instance:SampleTest@df4efb]" name="runLoginAndLogout1" class="SampleTest"/>
        <method signature="SampleTest1.runLoginAndLogout3()[pri:1, instance:SampleTest1@17a2457]" name="runLoginAndLogout3" class="SampleTest1"/>
      </group> <!-- sanity -->
    </groups>
    <test name="Regression" duration-ms="3563" started-at="2023-12-19T12:31:48Z" finished-at="2023-12-19T12:31:51Z">
      <class name="SampleTest">
        <test-method status="PASS" signature="readPropertyFile()[pri:0, instance:SampleTest@df4efb]" name="readPropertyFile" is-config="true" duration-ms="219" started-at="2023-12-19T12:31:47Z" finished-at="2023-12-19T12:31:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readPropertyFile -->
        <test-method status="PASS" signature="runLoginAndLogout1(java.lang.reflect.Method)[pri:0, instance:SampleTest@df4efb]" name="runLoginAndLogout1" duration-ms="547" started-at="2023-12-19T12:31:48Z" finished-at="2023-12-19T12:31:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SampleTest.runLoginAndLogout1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runLoginAndLogout1 -->
        <test-method status="PASS" signature="testAddition(java.lang.reflect.Method)[pri:0, instance:SampleTest@df4efb]" name="testAddition" duration-ms="547" started-at="2023-12-19T12:31:48Z" finished-at="2023-12-19T12:31:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SampleTest.testAddition(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at SampleTest.testAddition(SampleTest.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddition -->
        <test-method status="PASS" signature="runLoginAndLogout3(java.lang.reflect.Method)[pri:1, instance:SampleTest@df4efb]" name="runLoginAndLogout3" duration-ms="15" started-at="2023-12-19T12:31:49Z" finished-at="2023-12-19T12:31:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SampleTest.runLoginAndLogout3(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[simply logginf report in A3]]>
            </line>
          </reporter-output>
        </test-method> <!-- runLoginAndLogout3 -->
        <test-method status="PASS" signature="testEnds()[pri:0, instance:SampleTest@df4efb]" name="testEnds" is-config="true" duration-ms="0" started-at="2023-12-19T12:31:51Z" finished-at="2023-12-19T12:31:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnds -->
      </class> <!-- SampleTest -->
      <class name="SampleTest1">
        <test-method status="PASS" signature="runLoginAndLogout3()[pri:1, instance:SampleTest1@17a2457]" name="runLoginAndLogout3" duration-ms="0" started-at="2023-12-19T12:31:49Z" finished-at="2023-12-19T12:31:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runLoginAndLogout3 -->
        <test-method status="PASS" signature="runLoginAndLogout()[pri:2, instance:SampleTest1@17a2457]" name="runLoginAndLogout" duration-ms="2016" started-at="2023-12-19T12:31:49Z" finished-at="2023-12-19T12:31:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runLoginAndLogout -->
      </class> <!-- SampleTest1 -->
    </test> <!-- Regression -->
  </suite> <!-- Testing -->
</testng-results>
